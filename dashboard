Kubernetes Dashboard Setup
This is a reference guide documented for the Demonstration on setting up the Kubernetes Dashboard which is a graphical web interface to manage the cluster
Step 1 –
Creating a cluster role binding –
To start deploying the Dashboard connect to the master ec2 instance via SSH as the root user.
Before installing the dashboard,
you need to create cluster role binding to create a service account and grant admin rights of the cluster to that account so that the dashboard can be accessed.
This can be done by creating a manifest file (.yaml) file with the below specification and deploying it.
cat > dashboard-admin.yaml << EOF
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
EOF
The above command creates a manifest file –‘dashboard-admin.yaml’ which creates a Cluster Role of cluster-admin as highlighted in the role Ref section.
A Service Account – kubernetes- dashboard is created to whom the cluster-admin role is granted as highlighted in the subject’s section.

To deploy the above manifest file created give the below command –
kubectl create -f dashboard-admin.yaml
Step 2 –Deploying the Dashboard–
To deploy the dashboard, you need to give the below command –
kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.4.0-rc2/aio/deploy/recommended.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml

Here to deploy the kubernetes Dashboard the official GIT repo of Kubernetes Dashboard is being referred, as there are continuous new releases in process, the latest version to deploy can be found by going to link-https://github.com/kubernetes/dashboard

Note:-Kindly ignore the error highlighted as it is due to the fact that the cluster role binding kubernetes-dashboard was already created in  Step 1.
Step 3 –Getting access to the Dashboard –
To access the dashboard from the local browser, a cluster role for ‘anonymous-user’ needs to be created by giving the below command –
kubectl create clusterrolebinding cluster-system-anonymous --clusterrole=cluster-admin --user=system:anonymous
Step 4 –Accessing the Dashboard –The dashboard can be accessed from your local browser by going to the below link –
https:// 34.238.121.38:6443/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
In the above URL the Public IP/DNS name of the master EC2 should be replaced as highlighted in yellow and 6443 is the port no to access the Dashboard.
Upon browsing to the URL, you will be prompted to enter the credentials to login the dashboard as shown below –

Step 5 –
Generating token to access the Dashboard –
 In the previous step you need to select the token authentication method to login to the Dashboard, the token to login can be generate by the below commands –
1.Get the service account from where the token will be generate by the command –kubectl -n kubernetes-dashboard get secret
This command will display all the service account related to kubernetes dashboard and you need to select the appropriate one to generate the token as shown –
You need to select the service account –‘kubernetes-dashboard-token-xxxxx’ where xxxxx is system dependent.
So, based on the output you need to give the below command to generate the token to login –
kubectl -n kubernetes-dashboard describe secret kubernetes-dashboard-token-tokenname
This command will generate the token as below –
Copy the entire token data and paste it in authentication page prompted in 
Step 4 to access the dashboard.
This completes the setup for the Kubernetes Dashboard.Overview Homepage –

